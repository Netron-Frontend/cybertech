
services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: POSTGRES_CONTAINER
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        GIT_BRANCH: ${BACKEND_BRANCH}
        GIT_REPO: ${GIT_REPO}
    container_name: BACKEND_CONTAINER
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      NODE_ENV: development
    ports:
      - ${BACKEND_PORT}
    volumes:
      - backend_node_modules:/app/node_modules
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        GIT_BRANCH: ${FRONTEND_BRANCH}
        GIT_REPO: ${GIT_REPO}
    container_name: FRONTEND_CONTAINER
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NODE_ENV: development
    ports:
      - ${FRONTEND_PORT}
    volumes:
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  app-network:
    driver: bridge